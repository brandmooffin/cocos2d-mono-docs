name: Rebuild API Documentation

on:
  repository_dispatch:
    types: [update-docs]

jobs:
  build-api-docs:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: 📥 Checkout docs
        uses: actions/checkout@v3

      - name: 🔑 Checkout cocos2d-mono
        uses: actions/checkout@v3
        with:
          repository: brandmooffin/cocos2d-mono
          token: ${{ secrets.DOCS_REPO_PAT }}
          path: cocos2d-mono

      - name: ⚙️ Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: 🧰 Install DocFX
        run: dotnet tool install -g docfx

      - name: Install required .NET workloads
        run: |
          dotnet workload update --version 8.0.400
          dotnet workload install android
          dotnet workload install ios

      - name: 📦 Restore API project
        run: |
          cd cocos2d-mono
          dotnet restore ./cocos2d-mono.All/cocos2d-mono.All.sln

      - name: 📖 Build API project
        run: |
          cd cocos2d-mono
          dotnet build ./cocos2d-mono.All/cocos2d-mono.All.sln --configuration Release

      - name: 📘 Generate DocFX Metadata
        run: |
          cd cocos2d-mono/docfx
          docfx metadata --outputFormat markdown --output ../../docs

      - name: 📦 Create zip archive of docfx YAML
        run: |
          powershell -Command "Compress-Archive -Path docs/api/* -DestinationPath docfx-yaml.zip"

      - name: 📤 Upload docfx YAML as artifact
        uses: actions/upload-artifact@v4
        with:
          name: docfx-yaml
          path: docfx-yaml.zip

      - name: 📝 Add frontmatter to API docs
        run: |
          Get-ChildItem -Path "docs/api" -Filter "*.md" -Recurse | Where-Object { $_.Name -ne "introduction.md" } | ForEach-Object {
            $content = Get-Content $_.FullName -Raw
            if ($content -and -not $content.StartsWith("___")) {
              $newContent = "___`n" + $content
              Set-Content -Path $_.FullName -Value $newContent -NoNewline
              Write-Host "Updated: $($_.FullName)"
            }
          }
        shell: pwsh

      - name: 📚 Build Docusaurus
        run: |
          npm install
          npm run build

      - name: Copy CNAME
        run: cp ./CNAME ./build/CNAME

      - name: 🚀 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token:
            ${{ secrets.GITHUB_TOKEN }}
            # Build output to publish to the `gh-pages` branch:
          publish_dir: ./build
          cname:
            cocos2d-mono.dev
            # The following lines assign commit authorship to the official
            # GH-Actions bot for deploys to `gh-pages` branch:
            # https://github.com/actions/checkout/issues/13#issuecomment-724415212
            # The GH actions bot is used by default if you didn't specify the two fields.
            # You can swap them out with your own user credentials.
          user_name: github-actions[bot]
          user_email: 41898282+github-actions[bot]@users.noreply.github.com
