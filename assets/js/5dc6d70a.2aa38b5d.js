"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8497],{15680:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>y});var n=a(96540);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),r=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=r(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,c=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=r(a),b=o,y=d["".concat(l,".").concat(b)]||d[b]||m[b]||c;return a?n.createElement(y,i(i({ref:t},p),{},{components:a})):n.createElement(y,i({ref:t},p))}));function y(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=a.length,i=new Array(c);i[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var r=2;r<c;r++)i[r]=a[r];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}b.displayName="MDXCreateElement"},24058:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>c,metadata:()=>s,toc:()=>r});var n=a(58168),o=(a(96540),a(15680));const c={},i='<a id="Box2D_Dynamics_b2ContactListener"></a> Class b2ContactListener',s={unversionedId:"api/Box2D.Dynamics.b2ContactListener",id:"api/Box2D.Dynamics.b2ContactListener",title:'<a id="Box2D_Dynamics_b2ContactListener"></a> Class b2ContactListener',description:"Namespace: Box2D.Dynamics",source:"@site/docs/api/Box2D.Dynamics.b2ContactListener.md",sourceDirName:"api",slug:"/api/Box2D.Dynamics.b2ContactListener",permalink:"/docs/api/Box2D.Dynamics.b2ContactListener",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:'<a id="Box2D_Dynamics_b2ContactImpulse"></a> Struct b2ContactImpulse',permalink:"/docs/api/Box2D.Dynamics.b2ContactImpulse"},next:{title:'<a id="Box2D_Dynamics_b2ContactManager"></a> Class b2ContactManager',permalink:"/docs/api/Box2D.Dynamics.b2ContactManager"}},l={},r=[{value:"Inheritance",id:"inheritance",level:4},{value:"Inherited Members",id:"inherited-members",level:4},{value:"Fields",id:"fields",level:2},{value:'<a id="Box2D_Dynamics_b2ContactListener_b2_defaultListener"></a> b2_defaultListener',id:"-b2_defaultlistener",level:3},{value:"Field Value",id:"field-value",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_b2_defaultListener"></a> b2_defaultListener',id:"-b2_defaultlistener-1",level:3},{value:"Field Value",id:"field-value-1",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_b2_defaultListener"></a> b2_defaultListener',id:"-b2_defaultlistener-2",level:3},{value:"Field Value",id:"field-value-2",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_b2_defaultListener"></a> b2_defaultListener',id:"-b2_defaultlistener-3",level:3},{value:"Field Value",id:"field-value-3",level:4},{value:"Methods",id:"methods",level:2},{value:'<a id="Box2D_Dynamics_b2ContactListener_BeginContact_Box2D_Dynamics_Contacts_b2Contact_"></a> BeginContact(b2Contact)',id:"-begincontactb2contact",level:3},{value:"Parameters",id:"parameters",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_BeginContact_Box2D_Dynamics_Contacts_b2Contact_"></a> BeginContact(b2Contact)',id:"-begincontactb2contact-1",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_BeginContact_Box2D_Dynamics_Contacts_b2Contact_"></a> BeginContact(b2Contact)',id:"-begincontactb2contact-2",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_BeginContact_Box2D_Dynamics_Contacts_b2Contact_"></a> BeginContact(b2Contact)',id:"-begincontactb2contact-3",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_EndContact_Box2D_Dynamics_Contacts_b2Contact_"></a> EndContact(b2Contact)',id:"-endcontactb2contact",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_EndContact_Box2D_Dynamics_Contacts_b2Contact_"></a> EndContact(b2Contact)',id:"-endcontactb2contact-1",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_EndContact_Box2D_Dynamics_Contacts_b2Contact_"></a> EndContact(b2Contact)',id:"-endcontactb2contact-2",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_EndContact_Box2D_Dynamics_Contacts_b2Contact_"></a> EndContact(b2Contact)',id:"-endcontactb2contact-3",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_PostSolve_Box2D_Dynamics_Contacts_b2Contact_Box2D_Dynamics_b2ContactImpulse__"></a> PostSolve(b2Contact, ref b2ContactImpulse)',id:"-postsolveb2contact-ref-b2contactimpulse",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_PostSolve_Box2D_Dynamics_Contacts_b2Contact_Box2D_Dynamics_b2ContactImpulse__"></a> PostSolve(b2Contact, ref b2ContactImpulse)',id:"-postsolveb2contact-ref-b2contactimpulse-1",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_PostSolve_Box2D_Dynamics_Contacts_b2Contact_Box2D_Dynamics_b2ContactImpulse__"></a> PostSolve(b2Contact, ref b2ContactImpulse)',id:"-postsolveb2contact-ref-b2contactimpulse-2",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_PostSolve_Box2D_Dynamics_Contacts_b2Contact_Box2D_Dynamics_b2ContactImpulse__"></a> PostSolve(b2Contact, ref b2ContactImpulse)',id:"-postsolveb2contact-ref-b2contactimpulse-3",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_PreSolve_Box2D_Dynamics_Contacts_b2Contact_Box2D_Collision_b2Manifold_"></a> PreSolve(b2Contact, b2Manifold)',id:"-presolveb2contact-b2manifold",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_PreSolve_Box2D_Dynamics_Contacts_b2Contact_Box2D_Collision_b2Manifold_"></a> PreSolve(b2Contact, b2Manifold)',id:"-presolveb2contact-b2manifold-1",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_PreSolve_Box2D_Dynamics_Contacts_b2Contact_Box2D_Collision_b2Manifold_"></a> PreSolve(b2Contact, b2Manifold)',id:"-presolveb2contact-b2manifold-2",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:'<a id="Box2D_Dynamics_b2ContactListener_PreSolve_Box2D_Dynamics_Contacts_b2Contact_Box2D_Collision_b2Manifold_"></a> PreSolve(b2Contact, b2Manifold)',id:"-presolveb2contact-b2manifold-3",level:3},{value:"Parameters",id:"parameters-15",level:4}],p={toc:r},d="wrapper";function m(e){let{components:t,...a}=e;return(0,o.yg)(d,(0,n.A)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"-class-b2contactlistener"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener"})," Class b2ContactListener"),(0,o.yg)("p",null,"Namespace: ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics"},"Box2D.Dynamics"),(0,o.yg)("br",{parentName:"p"}),"\n","Assembly: Box2D.dll, box2d.iOS.dll  "),(0,o.yg)("p",null,"Implement this class to get contact information. You can use these results for\nthings like sounds and game logic. You can also get contact results by\ntraversing the contact lists after the time step. However, you might miss\nsome contacts because continuous physics leads to sub-stepping.\nAdditionally you may receive multiple callbacks for the same contact in a\nsingle time step.\nYou should strive to make your callbacks efficient because there may be\nmany callbacks per time step.\n@warning You cannot create/destroy Box2D entities inside these callbacks.    ///"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public abstract class b2ContactListener\n")),(0,o.yg)("h4",{id:"inheritance"},"Inheritance"),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://learn.microsoft.com/dotnet/api/system.object"},"object")," \u2190\n",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.b2ContactListener"},"b2ContactListener")),(0,o.yg)("h4",{id:"inherited-members"},"Inherited Members"),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)"},"object.Equals","(","object?",")"),",\n",(0,o.yg)("a",{parentName:"p",href:"https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)"},"object.Equals","(","object?, object?",")"),",\n",(0,o.yg)("a",{parentName:"p",href:"https://learn.microsoft.com/dotnet/api/system.object.gethashcode"},"object.GetHashCode","(",")"),",\n",(0,o.yg)("a",{parentName:"p",href:"https://learn.microsoft.com/dotnet/api/system.object.gettype"},"object.GetType","(",")"),",\n",(0,o.yg)("a",{parentName:"p",href:"https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone"},"object.MemberwiseClone","(",")"),",\n",(0,o.yg)("a",{parentName:"p",href:"https://learn.microsoft.com/dotnet/api/system.object.referenceequals"},"object.ReferenceEquals","(","object?, object?",")"),",\n",(0,o.yg)("a",{parentName:"p",href:"https://learn.microsoft.com/dotnet/api/system.object.tostring"},"object.ToString","(",")")),(0,o.yg)("h2",{id:"fields"},"Fields"),(0,o.yg)("h3",{id:"-b2_defaultlistener"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_b2_defaultListener"})," b2","_","defaultListener"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public static b2ContactListener b2_defaultListener\n")),(0,o.yg)("h4",{id:"field-value"},"Field Value"),(0,o.yg)("p",null," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.b2ContactListener"},"b2ContactListener")),(0,o.yg)("h3",{id:"-b2_defaultlistener-1"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_b2_defaultListener"})," b2","_","defaultListener"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public static b2ContactListener b2_defaultListener\n")),(0,o.yg)("h4",{id:"field-value-1"},"Field Value"),(0,o.yg)("p",null," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.b2ContactListener"},"b2ContactListener")),(0,o.yg)("h3",{id:"-b2_defaultlistener-2"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_b2_defaultListener"})," b2","_","defaultListener"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public static b2ContactListener b2_defaultListener\n")),(0,o.yg)("h4",{id:"field-value-2"},"Field Value"),(0,o.yg)("p",null," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.b2ContactListener"},"b2ContactListener")),(0,o.yg)("h3",{id:"-b2_defaultlistener-3"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_b2_defaultListener"})," b2","_","defaultListener"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public static b2ContactListener b2_defaultListener\n")),(0,o.yg)("h4",{id:"field-value-3"},"Field Value"),(0,o.yg)("p",null," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.b2ContactListener"},"b2ContactListener")),(0,o.yg)("h2",{id:"methods"},"Methods"),(0,o.yg)("h3",{id:"-begincontactb2contact"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_BeginContact_Box2D_Dynamics_Contacts_b2Contact_"})," BeginContact","(","b2Contact",")"),(0,o.yg)("p",null,"Called when two fixtures begin to touch."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public virtual void BeginContact(b2Contact contact)\n")),(0,o.yg)("h4",{id:"parameters"},"Parameters"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"contact")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.Contacts.b2Contact"},"b2Contact")),(0,o.yg)("h3",{id:"-begincontactb2contact-1"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_BeginContact_Box2D_Dynamics_Contacts_b2Contact_"})," BeginContact","(","b2Contact",")"),(0,o.yg)("p",null,"Called when two fixtures begin to touch."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public virtual void BeginContact(b2Contact contact)\n")),(0,o.yg)("h4",{id:"parameters-1"},"Parameters"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"contact")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.Contacts.b2Contact"},"b2Contact")),(0,o.yg)("h3",{id:"-begincontactb2contact-2"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_BeginContact_Box2D_Dynamics_Contacts_b2Contact_"})," BeginContact","(","b2Contact",")"),(0,o.yg)("p",null,"Called when two fixtures begin to touch."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public virtual void BeginContact(b2Contact contact)\n")),(0,o.yg)("h4",{id:"parameters-2"},"Parameters"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"contact")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.Contacts.b2Contact"},"b2Contact")),(0,o.yg)("h3",{id:"-begincontactb2contact-3"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_BeginContact_Box2D_Dynamics_Contacts_b2Contact_"})," BeginContact","(","b2Contact",")"),(0,o.yg)("p",null,"Called when two fixtures begin to touch."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public virtual void BeginContact(b2Contact contact)\n")),(0,o.yg)("h4",{id:"parameters-3"},"Parameters"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"contact")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.Contacts.b2Contact"},"b2Contact")),(0,o.yg)("h3",{id:"-endcontactb2contact"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_EndContact_Box2D_Dynamics_Contacts_b2Contact_"})," EndContact","(","b2Contact",")"),(0,o.yg)("p",null,"Called when two fixtures cease to touch."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public virtual void EndContact(b2Contact contact)\n")),(0,o.yg)("h4",{id:"parameters-4"},"Parameters"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"contact")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.Contacts.b2Contact"},"b2Contact")),(0,o.yg)("h3",{id:"-endcontactb2contact-1"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_EndContact_Box2D_Dynamics_Contacts_b2Contact_"})," EndContact","(","b2Contact",")"),(0,o.yg)("p",null,"Called when two fixtures cease to touch."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public virtual void EndContact(b2Contact contact)\n")),(0,o.yg)("h4",{id:"parameters-5"},"Parameters"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"contact")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.Contacts.b2Contact"},"b2Contact")),(0,o.yg)("h3",{id:"-endcontactb2contact-2"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_EndContact_Box2D_Dynamics_Contacts_b2Contact_"})," EndContact","(","b2Contact",")"),(0,o.yg)("p",null,"Called when two fixtures cease to touch."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public virtual void EndContact(b2Contact contact)\n")),(0,o.yg)("h4",{id:"parameters-6"},"Parameters"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"contact")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.Contacts.b2Contact"},"b2Contact")),(0,o.yg)("h3",{id:"-endcontactb2contact-3"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_EndContact_Box2D_Dynamics_Contacts_b2Contact_"})," EndContact","(","b2Contact",")"),(0,o.yg)("p",null,"Called when two fixtures cease to touch."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public virtual void EndContact(b2Contact contact)\n")),(0,o.yg)("h4",{id:"parameters-7"},"Parameters"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"contact")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.Contacts.b2Contact"},"b2Contact")),(0,o.yg)("h3",{id:"-postsolveb2contact-ref-b2contactimpulse"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_PostSolve_Box2D_Dynamics_Contacts_b2Contact_Box2D_Dynamics_b2ContactImpulse__"})," PostSolve","(","b2Contact, ref b2ContactImpulse",")"),(0,o.yg)("p",null,"This lets you inspect a contact after the solver is finished. This is useful\nfor inspecting impulses.\nNote: the contact manifold does not include time of impact impulses, which can be\narbitrarily large if the sub-step is small. Hence the impulse is provided explicitly\nin a separate data structure.\nNote: this is only called for contacts that are touching, solid, and awake."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public abstract void PostSolve(b2Contact contact, ref b2ContactImpulse impulse)\n")),(0,o.yg)("h4",{id:"parameters-8"},"Parameters"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"contact")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.Contacts.b2Contact"},"b2Contact")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"impulse")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.b2ContactImpulse"},"b2ContactImpulse")),(0,o.yg)("h3",{id:"-postsolveb2contact-ref-b2contactimpulse-1"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_PostSolve_Box2D_Dynamics_Contacts_b2Contact_Box2D_Dynamics_b2ContactImpulse__"})," PostSolve","(","b2Contact, ref b2ContactImpulse",")"),(0,o.yg)("p",null,"This lets you inspect a contact after the solver is finished. This is useful\nfor inspecting impulses.\nNote: the contact manifold does not include time of impact impulses, which can be\narbitrarily large if the sub-step is small. Hence the impulse is provided explicitly\nin a separate data structure.\nNote: this is only called for contacts that are touching, solid, and awake."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public abstract void PostSolve(b2Contact contact, ref b2ContactImpulse impulse)\n")),(0,o.yg)("h4",{id:"parameters-9"},"Parameters"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"contact")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.Contacts.b2Contact"},"b2Contact")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"impulse")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.b2ContactImpulse"},"b2ContactImpulse")),(0,o.yg)("h3",{id:"-postsolveb2contact-ref-b2contactimpulse-2"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_PostSolve_Box2D_Dynamics_Contacts_b2Contact_Box2D_Dynamics_b2ContactImpulse__"})," PostSolve","(","b2Contact, ref b2ContactImpulse",")"),(0,o.yg)("p",null,"This lets you inspect a contact after the solver is finished. This is useful\nfor inspecting impulses.\nNote: the contact manifold does not include time of impact impulses, which can be\narbitrarily large if the sub-step is small. Hence the impulse is provided explicitly\nin a separate data structure.\nNote: this is only called for contacts that are touching, solid, and awake."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public abstract void PostSolve(b2Contact contact, ref b2ContactImpulse impulse)\n")),(0,o.yg)("h4",{id:"parameters-10"},"Parameters"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"contact")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.Contacts.b2Contact"},"b2Contact")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"impulse")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.b2ContactImpulse"},"b2ContactImpulse")),(0,o.yg)("h3",{id:"-postsolveb2contact-ref-b2contactimpulse-3"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_PostSolve_Box2D_Dynamics_Contacts_b2Contact_Box2D_Dynamics_b2ContactImpulse__"})," PostSolve","(","b2Contact, ref b2ContactImpulse",")"),(0,o.yg)("p",null,"This lets you inspect a contact after the solver is finished. This is useful\nfor inspecting impulses.\nNote: the contact manifold does not include time of impact impulses, which can be\narbitrarily large if the sub-step is small. Hence the impulse is provided explicitly\nin a separate data structure.\nNote: this is only called for contacts that are touching, solid, and awake."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public abstract void PostSolve(b2Contact contact, ref b2ContactImpulse impulse)\n")),(0,o.yg)("h4",{id:"parameters-11"},"Parameters"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"contact")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.Contacts.b2Contact"},"b2Contact")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"impulse")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.b2ContactImpulse"},"b2ContactImpulse")),(0,o.yg)("h3",{id:"-presolveb2contact-b2manifold"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_PreSolve_Box2D_Dynamics_Contacts_b2Contact_Box2D_Collision_b2Manifold_"})," PreSolve","(","b2Contact, b2Manifold",")"),(0,o.yg)("p",null,"This is called after a contact is updated. This allows you to inspect a\ncontact before it goes to the solver. If you are careful, you can modify the\ncontact manifold (e.g. disable contact).\nA copy of the old manifold is provided so that you can detect changes.\nNote: this is called only for awake bodies.\nNote: this is called even when the number of contact points is zero.\nNote: this is not called for sensors.\nNote: if you set the number of contact points to zero, you will not\nget an EndContact callback. However, you may get a BeginContact callback\nthe next step."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public abstract void PreSolve(b2Contact contact, b2Manifold oldManifold)\n")),(0,o.yg)("h4",{id:"parameters-12"},"Parameters"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"contact")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.Contacts.b2Contact"},"b2Contact")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"oldManifold")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Collision.b2Manifold"},"b2Manifold")),(0,o.yg)("h3",{id:"-presolveb2contact-b2manifold-1"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_PreSolve_Box2D_Dynamics_Contacts_b2Contact_Box2D_Collision_b2Manifold_"})," PreSolve","(","b2Contact, b2Manifold",")"),(0,o.yg)("p",null,"This is called after a contact is updated. This allows you to inspect a\ncontact before it goes to the solver. If you are careful, you can modify the\ncontact manifold (e.g. disable contact).\nA copy of the old manifold is provided so that you can detect changes.\nNote: this is called only for awake bodies.\nNote: this is called even when the number of contact points is zero.\nNote: this is not called for sensors.\nNote: if you set the number of contact points to zero, you will not\nget an EndContact callback. However, you may get a BeginContact callback\nthe next step."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public abstract void PreSolve(b2Contact contact, b2Manifold oldManifold)\n")),(0,o.yg)("h4",{id:"parameters-13"},"Parameters"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"contact")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.Contacts.b2Contact"},"b2Contact")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"oldManifold")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Collision.b2Manifold"},"b2Manifold")),(0,o.yg)("h3",{id:"-presolveb2contact-b2manifold-2"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_PreSolve_Box2D_Dynamics_Contacts_b2Contact_Box2D_Collision_b2Manifold_"})," PreSolve","(","b2Contact, b2Manifold",")"),(0,o.yg)("p",null,"This is called after a contact is updated. This allows you to inspect a\ncontact before it goes to the solver. If you are careful, you can modify the\ncontact manifold (e.g. disable contact).\nA copy of the old manifold is provided so that you can detect changes.\nNote: this is called only for awake bodies.\nNote: this is called even when the number of contact points is zero.\nNote: this is not called for sensors.\nNote: if you set the number of contact points to zero, you will not\nget an EndContact callback. However, you may get a BeginContact callback\nthe next step."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public abstract void PreSolve(b2Contact contact, b2Manifold oldManifold)\n")),(0,o.yg)("h4",{id:"parameters-14"},"Parameters"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"contact")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.Contacts.b2Contact"},"b2Contact")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"oldManifold")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Collision.b2Manifold"},"b2Manifold")),(0,o.yg)("h3",{id:"-presolveb2contact-b2manifold-3"},(0,o.yg)("a",{id:"Box2D_Dynamics_b2ContactListener_PreSolve_Box2D_Dynamics_Contacts_b2Contact_Box2D_Collision_b2Manifold_"})," PreSolve","(","b2Contact, b2Manifold",")"),(0,o.yg)("p",null,"This is called after a contact is updated. This allows you to inspect a\ncontact before it goes to the solver. If you are careful, you can modify the\ncontact manifold (e.g. disable contact).\nA copy of the old manifold is provided so that you can detect changes.\nNote: this is called only for awake bodies.\nNote: this is called even when the number of contact points is zero.\nNote: this is not called for sensors.\nNote: if you set the number of contact points to zero, you will not\nget an EndContact callback. However, you may get a BeginContact callback\nthe next step."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-csharp"},"public abstract void PreSolve(b2Contact contact, b2Manifold oldManifold)\n")),(0,o.yg)("h4",{id:"parameters-15"},"Parameters"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"contact")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Dynamics.Contacts.b2Contact"},"b2Contact")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"oldManifold")," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/Box2D.Collision.b2Manifold"},"b2Manifold")))}m.isMDXComponent=!0}}]);